#!/usr/bin/env bash

########################
# Function
########################

function executeCommand () {
        cmd=$1
        echo "$ $cmd" && eval $cmd
}

function confirmTestCase {
	msg=$1
	id_start=$2
	id_end=$3
	re='^[0-9]+$'
	while :
	do
		echo -en "${msg}"
		read input
		if [[ ${input} =~ $re ]] ; then
		    if ((${id_start} <= ${input})) && ((${input} <= ${id_end})); then
                return ${input}
            fi
		else
		    echo -e "\nPlease input valid id."
		fi
	done
}

########################
# Variable
########################

test_cases=(
"tests.test_mdl.TestMusicDL"
"tests.test_mdl.TestMusicDL.test_youtube_playlist_random_generated"
"tests.test_mdl.TestMusicDL.test_youtube_playlist_contains_private"
"tests.test_mdl.TestMusicDL.test_youtube_playlist_contains_deleted"
"tests.test_mdl.TestMusicDL.test_youtube_single"
"tests.test_mdl.TestMusicDL.test_soundcloud_playlist"
"tests.test_mdl.TestMusicDL.test_soundcloud_single"
"tests.test_mdl.TestMusicDL.test_youtube_playlist_mp3"
"tests.test_mdl.TestMusicDL.test_youtube_playlist_flac"
"tests.test_mdl.TestMusicDL.test_soundcloud_playlist_mp3"
"tests.test_mdl.TestMusicDL.test_soundcloud_playlist_flac"
)
test_descriptions=(
"Test all cases."
"Test playlist randomly generated by YouTube."
"Test user playlist contains private video on YouTube."
"Test user playlist contains deleted video on YouTube."
"Test single song on YouTube."
"Test playlist on SoundCloud."
"Test single song on SoundCloud."
"Test flac format on YouTube."
"Test mp3 format on YouTube."
"Test flac format on SoundCloud."
"Test mp3 format on SoundCloud."
)
id_start=0
id_end=$((${#test_cases[@]} - 1))

########################
# Main
########################

# Print test cases
echo -e "\nUnite Test for MusicDownloader\n"
for i in "${!test_cases[@]}"; do
    test_case=${test_descriptions[$i]}
    test_descriptions=${test_cases[$i]}
    printf "%4s %-54s %-60s" "[${i}]" "${test_descriptions[$i]}" "${test_cases[$i]}"
    echo
done

# Print input dialog
msg="\nInput id to execute. [${id_start}-${id_end}]: "
confirmTestCase "${msg}" ${id_start} ${id_end}
index_to_execute=$?

# Execute command
echo
executeCommand "python setup.py test --test-suite ${test_cases[$index_to_execute]}\

"
